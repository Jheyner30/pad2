{"title":"como usar quarto","markdown":{"yaml":{"title":"Untitled","author":"Jheyner Villegas Mas","format":"html","editor":"visual"},"headingText":"Quarto","containsRefs":false,"markdown":"\n\n\nQuarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.\n\n## Running Code\n\nWhen you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n```{r}\n1 + 1\n```\n\nYou can add options to executable code like this\n\n```{r}\n#| echo: false\n2 * 2\n```\n\nThe `echo: false` option disables the printing of code (only output is displayed).\n\n---\ntitle: \"como usar quarto\"\nauthor: \"Jheyner Villegas Mas\"\nformat:\n  html:\n    toc: true\n    toc-location: left\n    number-sections: true\n    embed-resources: true\n    output-file: index\n---\n\nquarto::quarto_render(\"mi_documento.qmd\")\\\n\\\n\n```{r}\n# Mi primera pagina web\n\nsource('https://inkaverse.com/setup.r')\n\n\n# Modelo lineal\n\n# Importar data xlsx\n\n# Leer el archivo de Excel y asignarlo a una variable\n```\n\n```{r}\nlibrary(openxlsx)\n```\n\n```{r}\ndata_de_tesis_prof <- openxlsx::read.xlsx(\"LA MOLINA 2014 POTATO WUE (FB).xlsx\", sheet = \"fb\")\n\n```\n\n```{r}\n# Modelo lineal\n\nmodelo <- lm(formula = lfa ~ bloque + geno + riego + riego*geno, data = data_de_tesis_prof)\n\nanova(modelo)\nplot(modelo)\n\n# Grafico en boxplot\n```\n\n```{r}\n#cargamos el paquete ggplot2\nlibrary(ggplot2)\n\n# Crear un boxplot para visualizar los efectos de geno y riego\nggplot(data_de_tesis_prof, aes(x = factor(geno), y = lfa, fill = factor(riego))) +\n  geom_boxplot() +\n  labs(x = \"Genotipo\", y = \"LFA (Respuesta)\", fill = \"Riego\") +\n  theme_minimal() +\n  ggtitle(\"Boxplot de LFA por Genotipo y Tratamiento de Riego\")\n```\n\n```{r}\nmodelo <- aov(formula = block + hi ~ riego + geno + riego*geno\n          , data = data_de_tesis_prof)\nanova(modelo)\n\nplot(modelo)\n\n```\n\n```{r}\nol <- boxplot(lfa ~ riego*geno,data_de_tesis_prof)\nol\n```\n\n# Imprimir resultados\nprint(tukey_result_geno)\n\n```{r}\nlibrary(inti)\n\nmodel <- remove_outliers(data = data_de_tesis_prof\n                         , formula = lfa ~ riego + geno + riego*geno + (1|bloque)\n                         , plot_diag = T\n                )\nmodel\n```\n```{r}\n# Crear el modelo lineal\nmodelo <- lm(formula = lfa ~ bloque + geno + riego + riego*geno, data = data_de_tesis_prof)\n\nanova(modelo)\nplot(modelo)\n```\n\n\n```{r}\n# Cargar la librería 'agricolae' para la prueba de Tukey\nlibrary(agricolae)\n```\n\n\n```{r}\n# Realizar la prueba de Tukey\ntukey_result <- HSD.test(modelo, c(\"geno\", \"riego\"), group = TRUE)\n```\n\n\n```{r}\n# Mostrar los resultados de Tukey\nprint(tukey_result)\n\n# Graficar los resultados de Tukey\nplot(tukey_result)\n\n```\n```{r}\nfb <- data.frame(\n  column1 = c(1, 2, 3),\n  column2 = c(\"a\", \"b\", \"c\")\n)\n\n```\n\n```{r}\n# Load necessary libraries\nlibrary(agricolae)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(tidyr)\n\n# Check if fb exists\nif (!exists(\"fb\")) {\n  stop(\"The data frame 'fb' is not defined.\")\n}\n\n\n# Perform Tukey's HSD test\ntukey_result <- HSD.test(modelo, c(\"geno\", \"riego\"), group = TRUE)\n\n\n# Prepare data for plotting\ngrupos <- tukey_result$groups %>% \n  rownames_to_column(\"tratamientos\") %>% \n  separate(tratamientos, into = c(\"geno\", \"riego\"), sep = \":\")\n\n# Create the plot\nggplot(grupos, aes(x = geno, y = lfa, fill = riego)) + \n  geom_bar(stat = \"identity\", position = position_dodge(), color = \"black\") +\n  labs(title = \"Comparación de Medias - Prueba de Tukey\", \n       x = \"Genotipos\", \n       y = \"LFA\") +\n  theme_minimal() +\n  theme(legend.title = element_blank()) +\n  scale_fill_discrete(name = \"Riego\")\n\n```\n\n```{r}\n#interraccion \n\nlibrary(agricolae)\n\n# Test de Tukey para el factor \"riego\"\ntukey_riego <- HSD.test(modelo, \"riego\", group = TRUE)\nprint(tukey_riego)\n```\n\n```{r}\n# Cargar las librerías necesarias\nlibrary(ggplot2)\nlibrary(dplyr)\n\n# Crear un dataframe con los datos proporcionados\ndatos <- data.frame(\n  riego = c(\"irrigado\", \"sequia\"),\n  lfa = c(3.523203, 3.466221),\n  groups = c(\"a\", \"a\")  # Las letras estadísticas que has proporcionado\n)\n\n# Crear el gráfico de barras con letras estadísticas\nggplot(datos, aes(x = riego, y = lfa, fill = riego)) +\n  geom_bar(stat = \"identity\", position = \"dodge\", color = \"black\") +\n  labs(title = \"Comparación de Medias - Prueba de Tukey\", \n       x = \"Riego\", \n       y = \"LFA\") +\n  theme_minimal() +\n  theme(legend.title = element_blank()) +\n  scale_fill_manual(values = c(\"irrigado\" = \"skyblue\", \"sequia\" = \"orange\")) +\n  geom_text(aes(label = groups, y = lfa + 0.05),  # Posiciona las letras estadísticas\n            position = position_dodge(0.9), vjust = 0)  # Ajuste del espaciado\n\n```\n\n```{r}\n# Test de Tukey para el factor \"geno\"\ntukey_geno <- HSD.test(modelo, \"geno\", group = TRUE)\nprint(tukey_geno)\n```\n\n```{r}\n# Cargar la librería ggplot2\nlibrary(ggplot2)\n\n# Crear un data frame con los resultados de Tukey\ntukey_df <- data.frame(\n  geno = c(\"irrigado:G01\", \"irrigado:G02\", \"irrigado:G03\", \"irrigado:G04\", \"irrigado:G05\", \n           \"irrigado:G06\", \"irrigado:G07\", \"irrigado:G08\", \"irrigado:G09\", \"irrigado:G10\", \n           \"irrigado:G11\", \"irrigado:G12\", \"irrigado:G13\", \"irrigado:G14\", \"irrigado:G15\",\n           \"sequia:G01\", \"sequia:G02\", \"sequia:G03\", \"sequia:G04\", \"sequia:G05\", \n           \"sequia:G06\", \"sequia:G07\", \"sequia:G08\", \"sequia:G09\", \"sequia:G10\", \n           \"sequia:G11\", \"sequia:G12\", \"sequia:G13\", \"sequia:G14\", \"sequia:G15\"),\n  lfa = c(3.472384, 3.455082, 3.625062, 3.545896, 3.580478, 3.220892, 3.749364, 3.429036, \n          3.604533, 3.554818, 3.645409, 3.498279, 3.350110, 3.436284, 3.680409, 3.440771, \n          3.402255, 3.592667, 3.485744, 3.446316, 3.136288, 3.689064, 3.315331, 3.511135, \n          3.581705, 3.665248, 3.402240, 3.345985, 3.389015, 3.350110),\n  groups = c(\"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \n             \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\")\n)\n\n# Crear el gráfico con ggplot2\nggplot(tukey_df, aes(x = reorder(geno, lfa), y = lfa, fill = groups)) +\n  geom_bar(stat = \"identity\", position = \"dodge\", color = \"black\") +\n  geom_text(aes(label = groups, y = lfa + 0.05), position = position_dodge(0.9), vjust = 0) +\n  labs(title = \"Comparación de Genotipos - Test de Tukey\", \n       x = \"Genotipos\", y = \"LFA (Media)\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1))  # Girar las etiquetas para mejor legibilidad\n\n```\n\n```{r}\n# Test de Tukey para la interacción \"riego:geno\"\ntukey_interaccion <- HSD.test(modelo, c(\"riego\", \"geno\"), group = TRUE)\nprint(tukey_interaccion)\n```\n\n```{r}\n# Cargar librerías necesarias\nlibrary(ggplot2)\n\n# Extraer los resultados de los grupos\ntukey_groups <- tukey_interaccion$groups\n\n# Convertir el resultado en un data.frame para facilitar la gráfica\ndf <- data.frame(\n  Combinacion = rownames(tukey_groups),\n  Media = tukey_interaccion$means$lfa,\n  Grupo = tukey_groups$groups\n)\n\n# Crear el gráfico\nggplot(df, aes(x = reorder(Combinacion, Media), y = Media, fill = Grupo)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  geom_text(aes(label = Grupo), vjust = -0.5, size = 3.5) +\n  labs(x = \"Combinación de Riego y Genotipo\", y = \"Promedio de LFA\", title = \"Resultados del Test de Tukey: Interacción Riego:Genotipo\") +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  theme_minimal()\n\n```\n\n```{r}\n# Ver la estructura de tukey_interaccion\nstr(tukey_interaccion)\n```\n\n```{r}\n# Cargar librerías necesarias\nlibrary(ggplot2)\n\n# Extraer los resultados de los grupos de Tukey\ntukey_groups <- tukey_interaccion$groups\n\n# Crear un data frame con las combinaciones de riego y genotipo, las medias y los grupos\ndf <- data.frame(\n  Combinacion = rownames(tukey_groups),\n  Media = tukey_groups$lfa,\n  Grupo = tukey_groups$groups\n)\n\n# Crear el gráfico con ggplot\nggplot(df, aes(x = reorder(Combinacion, Media), y = Media, fill = Grupo)) +\n  geom_bar(stat = \"identity\", position = \"dodge\", color = \"black\") +\n  geom_text(aes(label = Grupo), vjust = -0.5, size = 3.5) +\n  labs(x = \"Combinación de Riego y Genotipo\", y = \"Promedio de LFA\", title = \"Resultados del Test de Tukey: Interacción Riego:Genotipo\") +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n\n```\n\n```{r}\n# Convertir las filas en columnas y separar los factores\nmc <- tukey_interaccion$groups %>%\n  rownames_to_column(\"trat\") %>%\n  separate(trat, c(\"riego\", \"variedad\"))\n# Ver la estructura del nuevo data frame mc\nstr(mc)\n```\n\n```{r}\n# Gráfico en ggplot\n\nggplot(mc, aes(x = variedad, y = lfa, fill = riego)) +\n  geom_bar(stat = \"identity\", position = position_dodge()) +\n  geom_text(aes(label = groups), position = position_dodge(width = 1), vjust = -0.1) +\n  labs(title = \"Producción por variedad y Riego\",\n       x = \"Variedad\",\n       y = \"LFA\") +\n  theme_minimal()\n```\n\n```{r}\nlibrary(tidyverse)\nlibrary(psych)\n\n```\n\n```{r}\n#Comparación de medias: emmeans\nlibrary(emmeans)\nmc <- emmeans(modelo, ~ riego * geno)\nmc <- emmeans(modelo, ~ riego | geno)\n\nmc <- emmeans(modelo, ~ riego | geno) %>%\n  as.data.frame()\n\nmc\n\nlibrary(emmeans)\nlibrary(multcomp)\nlibrary(multcompView)\nlibrary(lme4)\nlibrary(lmerTest)\n```\n\n```{r}\n# Calcular las medias marginales estimadas por el modelo\ncm1 <- emmeans(modelo, ~ geno | riego)\n# Aplicar la función cld al objeto 'cm1'\nresultado_cld <- cld(cm1, Letters = letters, reversed = TRUE)\n# Imprimir el resultado\nprint(resultado_cld)\n```\n```{r}\nlibrary(ggplot2)\nlibrary(emmeans)\n\n# Crear un gráfico de barras con medias y barras de error\nggplot(resultado_cld, aes(x = geno, y = emmean, fill = .group)) +\n  geom_bar(stat = \"identity\", position = \"dodge\", color = \"black\") +  # Barras\n  geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.2) +  # Barras de error\n  facet_wrap(~ riego, scales = \"free_y\") +  # Facetas por tipo de riego\n  labs(title = \"Medias marginales estimadas por genotipo\",\n       x = \"Genotipo\",\n       y = \"Media estimada (emmean)\",\n       fill = \"Grupo\") +  # Título y etiquetas\n  theme_minimal() +  # Tema limpio\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +  # Rotar etiquetas del eje X\n  scale_fill_manual(values = c(\"a\" = \"blue\", \"b\" = \"red\", \"c\" = \"green\", \n                               \"d\" = \"orange\", \"e\" = \"purple\", \"f\" = \"pink\", \n                               \"g\" = \"yellow\", \"h\" = \"brown\"))  # Colores para grupos\n\n```\n\n\n```{r}\n# Calcular las medias marginales estimadas por el modelo\ncm2 <- emmeans(modelo, ~ riego | geno) \n\n# Aplicar la función cld al objeto 'cm1'\n resultado_cld_cm2 <- cld(cm2, Letters = letters, reversed = TRUE)\n \n# Imprimir el resultado\nprint(resultado_cld_cm2)\n```\n```{r}\nlibrary(ggplot2)\nlibrary(emmeans)\n\n# Crear un gráfico de barras con medias y barras de error\nggplot(resultado_cld_cm2, aes(x = geno, y = emmean, fill = riego)) +\n  geom_bar(stat = \"identity\", position = \"dodge\", color = \"black\") +  # Barras\n  geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.2) +  # Barras de error\n  labs(title = \"Medias marginales estimadas por genotipo y tipo de riego\",\n       x = \"Genotipo\",\n       y = \"Media estimada (emmean)\",\n       fill = \"Riego\") +  # Título y etiquetas\n  theme_minimal() +  # Tema limpio\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +  # Rotar etiquetas del eje X\n  scale_fill_manual(values = c(\"irrigado\" = \"blue\", \"sequia\" = \"red\"))  # Colores para riego\n\n```\n\n\n```{r}\n# Calcular las medias marginales estimadas por el modelo para 'riego * geno'\ncm3 <- emmeans(modelo, ~ riego * geno)\n\n# Aplicar la función cld al objeto 'cm3'\nresultado_cld_cm3 <- cld(cm3, Letters = letters, reversed = TRUE)\n\n# Imprimir el resultado\nprint(resultado_cld_cm3)\n\n\n```\n\n```{r}\nlibrary(ggplot2)\nlibrary(emmeans)\n\n# Suponiendo que 'resultado_cld_cm3' es el objeto con los resultados\n\n# Crear gráfico de barras para medias marginales estimadas\nggplot(resultado_cld_cm3, aes(x = geno, y = emmean, fill = riego)) +\n  geom_bar(stat = \"identity\", position = \"dodge\", color = \"black\") +  # Barras\n  geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.2) +  # Barras de error\n  labs(title = \"Medias marginales estimadas por genotipo y tipo de riego\",\n       x = \"Genotipo\",\n       y = \"Media estimada (emmean)\",\n       fill = \"Tipo de riego\") +  # Título y etiquetas\n  theme_minimal() +  # Tema limpio\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +  # Rotar etiquetas del eje X\n  scale_fill_manual(values = c(\"irrigado\" = \"blue\", \"sequia\" = \"red\"))  # Colores para riego\n```\n```{r}\n# Analisis multivariado\nstr (data_de_tesis_prof)\n```\n```\n\n```{r}\n# Correlacion\nlibrary(tidyverse)\nlibrary(psych)\n\ndata_de_tesis_prof %>% \n  select_if(is.numeric) %>% \n  dplyr::select(!c(\"block\")) %>% \n  pairs.panels(x = .\n               , hist.col = \"red\"\n               , pch = 21\n               , stars = TRUE\n               , scale = FALSE\n           ,lm=TRUE)\n```\n\n```{r}\n#Analisis de componentes principales\nlibrary(FactoMineR)\nmv <- data_de_tesis_prof %>% \n  group_by(riego, geno) %>% \n  summarise(across(where(is.numeric), ~ mean(., na.rm = TRUE))) %>% \n  PCA(scale.unit = T, quali.sup = c(1:4), graph = F)\n\np1 <- plot(mv\n     , choix=\"ind\"\n     , habillage=1)\np2 <- plot(mv\n     , choix=\"var\")\n\nlist(p1, p2) %>% \n  plot_grid(plotlist=.,nrow=1)\n```\n```\n\n```\n\n","srcMarkdownNoYaml":"\n\n## Quarto\n\nQuarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.\n\n## Running Code\n\nWhen you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n```{r}\n1 + 1\n```\n\nYou can add options to executable code like this\n\n```{r}\n#| echo: false\n2 * 2\n```\n\nThe `echo: false` option disables the printing of code (only output is displayed).\n\n---\ntitle: \"como usar quarto\"\nauthor: \"Jheyner Villegas Mas\"\nformat:\n  html:\n    toc: true\n    toc-location: left\n    number-sections: true\n    embed-resources: true\n    output-file: index\n---\n\nquarto::quarto_render(\"mi_documento.qmd\")\\\n\\\n\n```{r}\n# Mi primera pagina web\n\nsource('https://inkaverse.com/setup.r')\n\n\n# Modelo lineal\n\n# Importar data xlsx\n\n# Leer el archivo de Excel y asignarlo a una variable\n```\n\n```{r}\nlibrary(openxlsx)\n```\n\n```{r}\ndata_de_tesis_prof <- openxlsx::read.xlsx(\"LA MOLINA 2014 POTATO WUE (FB).xlsx\", sheet = \"fb\")\n\n```\n\n```{r}\n# Modelo lineal\n\nmodelo <- lm(formula = lfa ~ bloque + geno + riego + riego*geno, data = data_de_tesis_prof)\n\nanova(modelo)\nplot(modelo)\n\n# Grafico en boxplot\n```\n\n```{r}\n#cargamos el paquete ggplot2\nlibrary(ggplot2)\n\n# Crear un boxplot para visualizar los efectos de geno y riego\nggplot(data_de_tesis_prof, aes(x = factor(geno), y = lfa, fill = factor(riego))) +\n  geom_boxplot() +\n  labs(x = \"Genotipo\", y = \"LFA (Respuesta)\", fill = \"Riego\") +\n  theme_minimal() +\n  ggtitle(\"Boxplot de LFA por Genotipo y Tratamiento de Riego\")\n```\n\n```{r}\nmodelo <- aov(formula = block + hi ~ riego + geno + riego*geno\n          , data = data_de_tesis_prof)\nanova(modelo)\n\nplot(modelo)\n\n```\n\n```{r}\nol <- boxplot(lfa ~ riego*geno,data_de_tesis_prof)\nol\n```\n\n# Imprimir resultados\nprint(tukey_result_geno)\n\n```{r}\nlibrary(inti)\n\nmodel <- remove_outliers(data = data_de_tesis_prof\n                         , formula = lfa ~ riego + geno + riego*geno + (1|bloque)\n                         , plot_diag = T\n                )\nmodel\n```\n```{r}\n# Crear el modelo lineal\nmodelo <- lm(formula = lfa ~ bloque + geno + riego + riego*geno, data = data_de_tesis_prof)\n\nanova(modelo)\nplot(modelo)\n```\n\n\n```{r}\n# Cargar la librería 'agricolae' para la prueba de Tukey\nlibrary(agricolae)\n```\n\n\n```{r}\n# Realizar la prueba de Tukey\ntukey_result <- HSD.test(modelo, c(\"geno\", \"riego\"), group = TRUE)\n```\n\n\n```{r}\n# Mostrar los resultados de Tukey\nprint(tukey_result)\n\n# Graficar los resultados de Tukey\nplot(tukey_result)\n\n```\n```{r}\nfb <- data.frame(\n  column1 = c(1, 2, 3),\n  column2 = c(\"a\", \"b\", \"c\")\n)\n\n```\n\n```{r}\n# Load necessary libraries\nlibrary(agricolae)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(tidyr)\n\n# Check if fb exists\nif (!exists(\"fb\")) {\n  stop(\"The data frame 'fb' is not defined.\")\n}\n\n\n# Perform Tukey's HSD test\ntukey_result <- HSD.test(modelo, c(\"geno\", \"riego\"), group = TRUE)\n\n\n# Prepare data for plotting\ngrupos <- tukey_result$groups %>% \n  rownames_to_column(\"tratamientos\") %>% \n  separate(tratamientos, into = c(\"geno\", \"riego\"), sep = \":\")\n\n# Create the plot\nggplot(grupos, aes(x = geno, y = lfa, fill = riego)) + \n  geom_bar(stat = \"identity\", position = position_dodge(), color = \"black\") +\n  labs(title = \"Comparación de Medias - Prueba de Tukey\", \n       x = \"Genotipos\", \n       y = \"LFA\") +\n  theme_minimal() +\n  theme(legend.title = element_blank()) +\n  scale_fill_discrete(name = \"Riego\")\n\n```\n\n```{r}\n#interraccion \n\nlibrary(agricolae)\n\n# Test de Tukey para el factor \"riego\"\ntukey_riego <- HSD.test(modelo, \"riego\", group = TRUE)\nprint(tukey_riego)\n```\n\n```{r}\n# Cargar las librerías necesarias\nlibrary(ggplot2)\nlibrary(dplyr)\n\n# Crear un dataframe con los datos proporcionados\ndatos <- data.frame(\n  riego = c(\"irrigado\", \"sequia\"),\n  lfa = c(3.523203, 3.466221),\n  groups = c(\"a\", \"a\")  # Las letras estadísticas que has proporcionado\n)\n\n# Crear el gráfico de barras con letras estadísticas\nggplot(datos, aes(x = riego, y = lfa, fill = riego)) +\n  geom_bar(stat = \"identity\", position = \"dodge\", color = \"black\") +\n  labs(title = \"Comparación de Medias - Prueba de Tukey\", \n       x = \"Riego\", \n       y = \"LFA\") +\n  theme_minimal() +\n  theme(legend.title = element_blank()) +\n  scale_fill_manual(values = c(\"irrigado\" = \"skyblue\", \"sequia\" = \"orange\")) +\n  geom_text(aes(label = groups, y = lfa + 0.05),  # Posiciona las letras estadísticas\n            position = position_dodge(0.9), vjust = 0)  # Ajuste del espaciado\n\n```\n\n```{r}\n# Test de Tukey para el factor \"geno\"\ntukey_geno <- HSD.test(modelo, \"geno\", group = TRUE)\nprint(tukey_geno)\n```\n\n```{r}\n# Cargar la librería ggplot2\nlibrary(ggplot2)\n\n# Crear un data frame con los resultados de Tukey\ntukey_df <- data.frame(\n  geno = c(\"irrigado:G01\", \"irrigado:G02\", \"irrigado:G03\", \"irrigado:G04\", \"irrigado:G05\", \n           \"irrigado:G06\", \"irrigado:G07\", \"irrigado:G08\", \"irrigado:G09\", \"irrigado:G10\", \n           \"irrigado:G11\", \"irrigado:G12\", \"irrigado:G13\", \"irrigado:G14\", \"irrigado:G15\",\n           \"sequia:G01\", \"sequia:G02\", \"sequia:G03\", \"sequia:G04\", \"sequia:G05\", \n           \"sequia:G06\", \"sequia:G07\", \"sequia:G08\", \"sequia:G09\", \"sequia:G10\", \n           \"sequia:G11\", \"sequia:G12\", \"sequia:G13\", \"sequia:G14\", \"sequia:G15\"),\n  lfa = c(3.472384, 3.455082, 3.625062, 3.545896, 3.580478, 3.220892, 3.749364, 3.429036, \n          3.604533, 3.554818, 3.645409, 3.498279, 3.350110, 3.436284, 3.680409, 3.440771, \n          3.402255, 3.592667, 3.485744, 3.446316, 3.136288, 3.689064, 3.315331, 3.511135, \n          3.581705, 3.665248, 3.402240, 3.345985, 3.389015, 3.350110),\n  groups = c(\"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \n             \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\")\n)\n\n# Crear el gráfico con ggplot2\nggplot(tukey_df, aes(x = reorder(geno, lfa), y = lfa, fill = groups)) +\n  geom_bar(stat = \"identity\", position = \"dodge\", color = \"black\") +\n  geom_text(aes(label = groups, y = lfa + 0.05), position = position_dodge(0.9), vjust = 0) +\n  labs(title = \"Comparación de Genotipos - Test de Tukey\", \n       x = \"Genotipos\", y = \"LFA (Media)\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1))  # Girar las etiquetas para mejor legibilidad\n\n```\n\n```{r}\n# Test de Tukey para la interacción \"riego:geno\"\ntukey_interaccion <- HSD.test(modelo, c(\"riego\", \"geno\"), group = TRUE)\nprint(tukey_interaccion)\n```\n\n```{r}\n# Cargar librerías necesarias\nlibrary(ggplot2)\n\n# Extraer los resultados de los grupos\ntukey_groups <- tukey_interaccion$groups\n\n# Convertir el resultado en un data.frame para facilitar la gráfica\ndf <- data.frame(\n  Combinacion = rownames(tukey_groups),\n  Media = tukey_interaccion$means$lfa,\n  Grupo = tukey_groups$groups\n)\n\n# Crear el gráfico\nggplot(df, aes(x = reorder(Combinacion, Media), y = Media, fill = Grupo)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  geom_text(aes(label = Grupo), vjust = -0.5, size = 3.5) +\n  labs(x = \"Combinación de Riego y Genotipo\", y = \"Promedio de LFA\", title = \"Resultados del Test de Tukey: Interacción Riego:Genotipo\") +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  theme_minimal()\n\n```\n\n```{r}\n# Ver la estructura de tukey_interaccion\nstr(tukey_interaccion)\n```\n\n```{r}\n# Cargar librerías necesarias\nlibrary(ggplot2)\n\n# Extraer los resultados de los grupos de Tukey\ntukey_groups <- tukey_interaccion$groups\n\n# Crear un data frame con las combinaciones de riego y genotipo, las medias y los grupos\ndf <- data.frame(\n  Combinacion = rownames(tukey_groups),\n  Media = tukey_groups$lfa,\n  Grupo = tukey_groups$groups\n)\n\n# Crear el gráfico con ggplot\nggplot(df, aes(x = reorder(Combinacion, Media), y = Media, fill = Grupo)) +\n  geom_bar(stat = \"identity\", position = \"dodge\", color = \"black\") +\n  geom_text(aes(label = Grupo), vjust = -0.5, size = 3.5) +\n  labs(x = \"Combinación de Riego y Genotipo\", y = \"Promedio de LFA\", title = \"Resultados del Test de Tukey: Interacción Riego:Genotipo\") +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n\n```\n\n```{r}\n# Convertir las filas en columnas y separar los factores\nmc <- tukey_interaccion$groups %>%\n  rownames_to_column(\"trat\") %>%\n  separate(trat, c(\"riego\", \"variedad\"))\n# Ver la estructura del nuevo data frame mc\nstr(mc)\n```\n\n```{r}\n# Gráfico en ggplot\n\nggplot(mc, aes(x = variedad, y = lfa, fill = riego)) +\n  geom_bar(stat = \"identity\", position = position_dodge()) +\n  geom_text(aes(label = groups), position = position_dodge(width = 1), vjust = -0.1) +\n  labs(title = \"Producción por variedad y Riego\",\n       x = \"Variedad\",\n       y = \"LFA\") +\n  theme_minimal()\n```\n\n```{r}\nlibrary(tidyverse)\nlibrary(psych)\n\n```\n\n```{r}\n#Comparación de medias: emmeans\nlibrary(emmeans)\nmc <- emmeans(modelo, ~ riego * geno)\nmc <- emmeans(modelo, ~ riego | geno)\n\nmc <- emmeans(modelo, ~ riego | geno) %>%\n  as.data.frame()\n\nmc\n\nlibrary(emmeans)\nlibrary(multcomp)\nlibrary(multcompView)\nlibrary(lme4)\nlibrary(lmerTest)\n```\n\n```{r}\n# Calcular las medias marginales estimadas por el modelo\ncm1 <- emmeans(modelo, ~ geno | riego)\n# Aplicar la función cld al objeto 'cm1'\nresultado_cld <- cld(cm1, Letters = letters, reversed = TRUE)\n# Imprimir el resultado\nprint(resultado_cld)\n```\n```{r}\nlibrary(ggplot2)\nlibrary(emmeans)\n\n# Crear un gráfico de barras con medias y barras de error\nggplot(resultado_cld, aes(x = geno, y = emmean, fill = .group)) +\n  geom_bar(stat = \"identity\", position = \"dodge\", color = \"black\") +  # Barras\n  geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.2) +  # Barras de error\n  facet_wrap(~ riego, scales = \"free_y\") +  # Facetas por tipo de riego\n  labs(title = \"Medias marginales estimadas por genotipo\",\n       x = \"Genotipo\",\n       y = \"Media estimada (emmean)\",\n       fill = \"Grupo\") +  # Título y etiquetas\n  theme_minimal() +  # Tema limpio\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +  # Rotar etiquetas del eje X\n  scale_fill_manual(values = c(\"a\" = \"blue\", \"b\" = \"red\", \"c\" = \"green\", \n                               \"d\" = \"orange\", \"e\" = \"purple\", \"f\" = \"pink\", \n                               \"g\" = \"yellow\", \"h\" = \"brown\"))  # Colores para grupos\n\n```\n\n\n```{r}\n# Calcular las medias marginales estimadas por el modelo\ncm2 <- emmeans(modelo, ~ riego | geno) \n\n# Aplicar la función cld al objeto 'cm1'\n resultado_cld_cm2 <- cld(cm2, Letters = letters, reversed = TRUE)\n \n# Imprimir el resultado\nprint(resultado_cld_cm2)\n```\n```{r}\nlibrary(ggplot2)\nlibrary(emmeans)\n\n# Crear un gráfico de barras con medias y barras de error\nggplot(resultado_cld_cm2, aes(x = geno, y = emmean, fill = riego)) +\n  geom_bar(stat = \"identity\", position = \"dodge\", color = \"black\") +  # Barras\n  geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.2) +  # Barras de error\n  labs(title = \"Medias marginales estimadas por genotipo y tipo de riego\",\n       x = \"Genotipo\",\n       y = \"Media estimada (emmean)\",\n       fill = \"Riego\") +  # Título y etiquetas\n  theme_minimal() +  # Tema limpio\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +  # Rotar etiquetas del eje X\n  scale_fill_manual(values = c(\"irrigado\" = \"blue\", \"sequia\" = \"red\"))  # Colores para riego\n\n```\n\n\n```{r}\n# Calcular las medias marginales estimadas por el modelo para 'riego * geno'\ncm3 <- emmeans(modelo, ~ riego * geno)\n\n# Aplicar la función cld al objeto 'cm3'\nresultado_cld_cm3 <- cld(cm3, Letters = letters, reversed = TRUE)\n\n# Imprimir el resultado\nprint(resultado_cld_cm3)\n\n\n```\n\n```{r}\nlibrary(ggplot2)\nlibrary(emmeans)\n\n# Suponiendo que 'resultado_cld_cm3' es el objeto con los resultados\n\n# Crear gráfico de barras para medias marginales estimadas\nggplot(resultado_cld_cm3, aes(x = geno, y = emmean, fill = riego)) +\n  geom_bar(stat = \"identity\", position = \"dodge\", color = \"black\") +  # Barras\n  geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.2) +  # Barras de error\n  labs(title = \"Medias marginales estimadas por genotipo y tipo de riego\",\n       x = \"Genotipo\",\n       y = \"Media estimada (emmean)\",\n       fill = \"Tipo de riego\") +  # Título y etiquetas\n  theme_minimal() +  # Tema limpio\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +  # Rotar etiquetas del eje X\n  scale_fill_manual(values = c(\"irrigado\" = \"blue\", \"sequia\" = \"red\"))  # Colores para riego\n```\n```{r}\n# Analisis multivariado\nstr (data_de_tesis_prof)\n```\n```\n\n```{r}\n# Correlacion\nlibrary(tidyverse)\nlibrary(psych)\n\ndata_de_tesis_prof %>% \n  select_if(is.numeric) %>% \n  dplyr::select(!c(\"block\")) %>% \n  pairs.panels(x = .\n               , hist.col = \"red\"\n               , pch = 21\n               , stars = TRUE\n               , scale = FALSE\n           ,lm=TRUE)\n```\n\n```{r}\n#Analisis de componentes principales\nlibrary(FactoMineR)\nmv <- data_de_tesis_prof %>% \n  group_by(riego, geno) %>% \n  summarise(across(where(is.numeric), ~ mean(., na.rm = TRUE))) %>% \n  PCA(scale.unit = T, quali.sup = c(1:4), graph = F)\n\np1 <- plot(mv\n     , choix=\"ind\"\n     , habillage=1)\np2 <- plot(mv\n     , choix=\"var\")\n\nlist(p1, p2) %>% \n  plot_grid(plotlist=.,nrow=1)\n```\n```\n\n```\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"number-sections":true,"embed-resources":true,"output-file":"index"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.555","editor":"visual","title":"como usar quarto","author":"Jheyner Villegas Mas","toc-location":"left"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":[]}